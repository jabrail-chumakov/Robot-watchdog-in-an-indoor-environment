<?xml version = "1.0"?>

<launch>
    <!-- The initial position of the robot in the charging station-->
    <rosparam param = "state/initial_pose"> [7.0,  2.0] </rosparam>
    
    <!-- Map size-->
    <rosparam param = "config/environment_size"> [20.0, 20.0] </rosparam>
    
    <!-- Node for the using armor -->
    <node pkg = "armor" type = "execute" name = "armor_service" args = "it.emarolab.armor.ARMORMainService"/>
    
    <!-- Node for the controller -->
    <node pkg = "robot_watchdog_in_an_indoor_environment" type = "controller.py" name = "controller" launch-prefix = "xterm -e"/>
    
    <!-- Node for managing of the controller -->
    <node pkg = "robot_watchdog_in_an_indoor_environment" type = "controller_helper.py" name = "controller_helper"/>
  
    <!-- Node for the finite state machine algorithm -->
    <node pkg = "robot_watchdog_in_an_indoor_environment" type = "fsm.py" name = "fsm" output = "screen" launch-prefix = "xterm -e"/>
    
    <!-- Node for the motion planner -->
    <node pkg = "robot_watchdog_in_an_indoor_environment" type = "planner.py" name = "planner" output = "screen" launch-prefix = "xterm -e"/>
    
    <!-- Node for managing of the motion planner-->
    <node pkg = "robot_watchdog_in_an_indoor_environment" type = "planner_helper.py" name = "planner_helper"/>

    <!-- Node for the robot states managing-->
    <node pkg = "robot_watchdog_in_an_indoor_environment" type = "robot_states.py" name = "robot_states" output = "screen" launch-prefix = "xterm -e"/>
  
    <!-- Node for the smash viewer -->
    <node pkg = "smach_viewer" type = "smach_viewer.py" name = "smach_viewer"/>

</launch>